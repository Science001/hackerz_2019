body {
  background: radial-gradient(#f1f1f1, #acacac);
  //   background: radial-gradient(#e66465, #9198e5);
  // background: #fff;
  background-repeat: no-repeat;
  height: 100vh;
  overflow: hidden;
}
#logo {
  max-height: 400px;
}
#logo-container {
  filter: invert(100%);
  height: 90vh;
}
.nav-item{
  color: #0a557b !important;
}
.nav-item{
  margin-right: 20px;
}
#particle-bg{
  position: fixed;
  z-index: -3;
  height: 100vh;
  left: 0;
  right: 0;
}

div#topDiv {
  width: 100%;
  height: 0%;
  opacity: 0.9;
  background: black;
  position: absolute;
  top: 0%;
}
div#bottomDiv {
  width: 100%;
  height: 0%;
  opacity: 0.9;
  background: black;
  position: absolute;
  bottom: 0%;
}
div#centerDiv {
  position: absolute;
  height: 1px;
  top: 50%;
  width: 100%;
  background: white;
  display: none;
  z-index: 1;
}
.nav-link{
  color: #0a557b;
  cursor: pointer;
}
.modal-dialog{
  background: radial-gradient(#f1f1f1, #acacac);
}
body.modal-open .container-fluid{
  filter: blur(4px);
  // filter: url("https://gist.githubusercontent.com/amitabhaghosh197/b7865b409e835b5a43b5/raw/1a255b551091924971e7dee8935fd38a7fdf7311/blur.svg#blur");
filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='4');
}
$primaryColor: #fff;
$secondaryColor: #333;
$steps: 20;
.glitch {
  position: relative;
  margin: 0 auto;
  color: $primaryColor;
  // font-size: 80px;
  font-family: "Exo", sans-serif;
  font-weight: 600;
  text-align: center;
  letter-spacing: 0.01em;
  transform: scale3d(1, 1, 1);

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    background: $secondaryColor;
    color: $primaryColor;
    clip: rect(0, 900px, 0, 0);
  }

  &::before {
    left: 7px;
    text-shadow: 1px 0 green;
    animation: glitch-effect 3s infinite linear alternate-reverse;
  }

  &::after {
    left: 3px;
    text-shadow: -1px 0 red;
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }
}

@keyframes glitch-effect {
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}
